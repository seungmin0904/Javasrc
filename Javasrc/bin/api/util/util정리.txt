java.util : import 구문 필요

1) StringTokenizer 클래스 (문자열을 조각낸다)
- 문자열을 지정 된 구분자로 분리
- 구분자로 사용 할 수 있는 문자는 단 한문자("")

2)Date 클래스
- 현재 시스템 날짜, 시간처리
- Date 초기값 형태 : Thu Mar 13 14:33:21 KST 2025 
- SimpleDateFormat 사용해 커스텀 가능

컬렉션 프레임워크
- 데이터를 담는 다양한 방법에 대한 클래스(인터페이스) 모음
- java.util.collection 
- List<E>  or T, K, V : 객체타입이 필요함
      1) List :배열과 같은개념
      - 순서대로 담기, 인덱스 접근 가능, 중복 저장 가능
      - 배열의 단점(개발자의 불편함) 해결
      - 구현 클래스 : ArrayList, LinkedList, Stack, Queue... 
      - Arraylist : 배열
      - LinkedList : 리스트를 링크로 연결
      - 순차적으로 추가/삭제 : ArrayList가 LinkedList보다 좀 더 빠름
        (ArrayList의 저장공간을 넉넉히 확보해야함)
      - 중간 데이터를 추가/삭제 : LinkedList가 ArrayList 보다 빠르다.
      - Stack : LIFO 구조 수식계산 , undo/redo, 브라우저 앞 뒤
      - Queue : FIFO 구조 - Buffer , 최근 사용 문서


       2) set : 중복 된 요소를 저장하지 않음
       - 요소의 순서 유지 X 
       - equals() + hashcode() : true 이면 중복된 요소로 처리
       - Hashset : * 해싱적용
       - 순서 유지 하려면 LinkedHashset 사용
       - TreeSet : 중복 된 요소 허용 안함 + 결과값 정렬, 이진검색트리 



      3) Map
      - collection 자식 아님 
      -K(Key), V(Value) 구조 사용
      - K 만 중복된 요소 검증
      -HashMap
      -TreeMap

      4) Iterator
      - 컬렉션에 저장된 요소들을 읽어오는 방법에 대한 표준화
      - List,set 데이터를 읽어오는 방법과 Map 데이터를 읽어오는 방법이 각각 다름
      - hasNext() , next() , remove()

      5) Arrays 
      - 배열과 관련된 유용한 메소드를 제공해줌
      - Arrays.toString(); 배열의 값을 출력해주는 역할
      - Arrays.asList(): 배열을 리스트로 변환시켜 주는 역할
      - 정렬 : Arrays.sort(기본타입배열) - 오름차순
               Arrays.sort(객체타입배열,정렬조건) 
               1) Comparator.reverseOrder() : 내림차순
               2) Comparator.naturalOrder() : 오름차순
               
      - 검색 
          1) 순차검색: 배열 첫번째 요소부터 하나씩 검색
          2) 이진검색(Arrays.binarySearch): 
             정렬된 데이터에서 중간값을 기준으로 범위를 반복적으로 줄여가면서 검색

      - 배열 비교 : Arrays.equals(배열1,배열2)   

      6) Comparator와 Comparable : 인터페이스, 부모역할
      - Comparator : 기본 정렬 기준 외에 다른 기준으로 정렬 하고자 할 때 사용
      - Comparable : 기본 정렬 기준을 구현하는데 사용
  